name: CI/CD Pipeline
on:
  push: 
    branches:  
      - main
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: week5-lab-ecr-nicholas
  INFRASTRUCTURE_REPO: OppongNicholas303/S3-Image-Application-Infrastructure    
  STACK_NAME: S3AppStack 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout application code
        uses: actions/checkout@v2
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Build and tag Docker image
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/$ECR_REPOSITORY:latest
          
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/$ECR_REPOSITORY:latest
          
      - name: Check if CloudFormation stack exists
        id: check-stack
        run: |
          if aws cloudformation describe-stacks --stack-name $STACK_NAME 2>&1 | grep -q "Stack with id $STACK_NAME does not exist"; then
            echo "STACK_EXISTS=false" >> $GITHUB_ENV
          else
            echo "STACK_EXISTS=true" >> $GITHUB_ENV
          fi
          
      - name: Checkout Infrastructure Repository
        if: env.STACK_EXISTS == 'false'
        uses: actions/checkout@v2
        with:
          repository: ${{ env.INFRASTRUCTURE_REPO }}
          path: infrastructure
          
      - name: Deploy CloudFormation Stack
        if: env.STACK_EXISTS == 'false'
        run: |
          aws cloudformation deploy \
            --template-file infrastructure/infastructure2.yaml \
            --stack-name $STACK_NAME \
            --parameter-overrides ImageUri=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/$ECR_REPOSITORY:latest \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM
